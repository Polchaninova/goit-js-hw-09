{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,WAC/BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,YAIjC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,SAACI,EAAKC,GAEvBC,YAAW,WACTF,EAAI,CAAEN,WAAUC,S,GAEfA,E,EAIc,SAACK,EAAKC,GACvBC,YAAW,WAGTD,EAAI,CAAEP,WAAUC,S,GAEfA,E,GAKTT,EAAKC,OAAOgB,iBAAiB,SAAS,SAAUC,GAC9CA,EAAEC,iBAMF,IAJA,IAAMd,EAAYe,SAASpB,EAAKK,UAAUgB,OACpCjB,EAAagB,SAASpB,EAAKI,WAAWiB,OACtCf,EAASc,SAASpB,EAAKM,OAAOe,OAE3BC,EAAI,EAAGA,EAAIhB,EAAQgB,IAC1Bf,EAAce,EAAI,EAAGlB,EAAaC,EAAYiB,GAC3CC,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAEjBgB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAEvEoB,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAElBgB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  btnSub: document.querySelector('.btnSub'),\n  firstDelay: document.querySelector('.first-delay'),\n  delayStep: document.querySelector('.delay-step'),\n  amount: document.querySelector('.amount'),\n\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((res, rej) => {\n      // Fulfill\n      setTimeout(() => {\n        res({ position, delay })\n\n      }, delay)\n    })\n  } else {\n    // Reject\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n\n        // Reject\n        rej({ position, delay })\n\n      }, delay)\n    })\n  }\n}\n\nrefs.btnSub.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const delayStep = parseInt(refs.delayStep.value);\n  const firstDelay = parseInt(refs.firstDelay.value);\n  const amount = parseInt(refs.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, firstDelay + delayStep * i)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n  }\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","btnSub","document","querySelector","firstDelay","delayStep","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","parseInt","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f52968d3.js.map"}