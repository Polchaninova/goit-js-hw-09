{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,WAC/BC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,OAAQJ,SAASC,cAAc,YAIjC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,CAACI,EAAKC,KAEvBC,YAAW,KACTF,EAAI,C,SAAEN,E,MAAUC,GAAQ,GAEvBA,EAAM,EAIQ,CAACK,EAAKC,KACvBC,YAAW,KAGTD,EAAI,C,SAAEP,E,MAAUC,GAAQ,GAEvBA,EAAM,E,CAKfT,EAAKC,OAAOgB,iBAAiB,SAAS,SAAUC,GAC9CA,EAAEC,iBAEF,MAAMd,EAAYe,SAASpB,EAAKK,UAAUgB,OACpCjB,EAAagB,SAASpB,EAAKI,WAAWiB,OACtCf,EAASc,SAASpB,EAAKM,OAAOe,OAEpC,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAQgB,IAC1Bf,EAAce,EAAI,EAAGlB,EAAaC,EAAYiB,GAC3CC,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBe,QAAQC,IAAI,uBAAqBjB,QAAiBC,OAClDiB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEzEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBe,QAAQC,IAAI,sBAAoBjB,QAAiBC,OACjDiB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  btnSub: document.querySelector('.btnSub'),\n  firstDelay: document.querySelector('.first-delay'),\n  delayStep: document.querySelector('.delay-step'),\n  amount: document.querySelector('.amount'),\n\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise((res, rej) => {\n      // Fulfill\n      setTimeout(() => {\n        res({ position, delay })\n\n      }, delay)\n    })\n  } else {\n    // Reject\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n\n        // Reject\n        rej({ position, delay })\n\n      }, delay)\n    })\n  }\n}\n\nrefs.btnSub.addEventListener('click', function (e) {\n  e.preventDefault();\n\n  const delayStep = parseInt(refs.delayStep.value);\n  const firstDelay = parseInt(refs.firstDelay.value);\n  const amount = parseInt(refs.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, firstDelay + delayStep * i)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n  }\n\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","btnSub","document","querySelector","firstDelay","delayStep","amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","parseInt","value","i","then","console","log","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.3ae484ba.js.map"}